openapi: '3.0.2'
info:
  title: SCS Status Page API
  version: '1.0'
components:
  schemas:
    # common values
    Id:
      description: Identification for objects. UUID preferred.
      type: string
      readOnly: true

    IdList:
      description: List of IDs for referencing other objects.
      type: array
      items:
        $ref: '#/components/schemas/Id'
      readOnly: true

    Incremental:
      description: |
        Positive and incrementing number for ordering and identfication of e.g. sub resources.
      type: integer
      readOnly: true

    IncrementalList:
      description: List of Incrementals for referencing subresources.
      type: array
      items:
        $ref: '#/components/schemas/Incremental'
      readOnly: true

    DisplayName:
      description: Short and describing name.
      type: string

    Description:
      description: A longer text with detailed information.
      type: string

    Date:
      description: Point in time. Nullable for open end timeframes.
      type: string
      format: date-time
      nullable: true

    # API objects
    ImpactType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        description:
          $ref: '#/components/schemas/Description'
      required:
        - id

    ImpactTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ImpactType'
      readOnly: true

    Impact:
      description: An impact connects a component and an incident with an impact type.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ImpactType'
        reference:
          $ref: '#/components/schemas/Id'

    ImpactList:
      description: |
        A list of impacts for a component or incident.
        In case of an incident the IDs refer to a component and vice versa.
      type: array
      items:
        $ref: '#/components/schemas/Impact'

    Phase:
      description: |
        A single phase is just its name.
        It can be referenced by its generation and order.
        See: #/components/schemas/PhaseReference
      type: string

    PhaseReference:
      description: To reference a phase, its generation and order is needed.
      type: object
      properties:
        displayName:
          $ref: '#/components/schemas/DisplayName'
        order:
          $ref: '#/components/schemas/Incremental'
        generation:
          $ref: '#/components/schemas/Incremental'
      required:
        - order
        - generation

    PhaseList:
      description: Phase resources are always handled as a list.
      type: object
      properties:
        generation:
          $ref: '#/components/schemas/Incremental'
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'
      required:
        - generation
        - phases

    IncidentUpdate:
      description: |
        An update is a sub resource to an incident.
        It's identified by the incident ID and its own order.
        Updates happen in a given order.
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Incremental'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        description:
          $ref: '#/components/schemas/Description'
        createdAt:
          $ref: '#/components/schemas/Date'
      required:
        - order
        - createdAt

    IncidentUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/IncidentUpdate'
      readOnly: true

    Labels:
      description: Labels are free text key value pairs for components.
      type: object
      additionalProperties:
        type: string

    Component:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        labels:
          $ref: '#/components/schemas/Labels'
        affectedBy:
          $ref: '#/components/schemas/ImpactList'
      required:
        - id

    ComponentList:
      type: array
      items:
        $ref: '#/components/schemas/Component'
      readOnly: true

    Incident:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        description:
          $ref: '#/components/schemas/Description'
        updates:
          $ref: '#/components/schemas/IncrementalList'
        affects:
          $ref: '#/components/schemas/ImpactList'
        beganAt:
          $ref: '#/components/schemas/Date'
        endedAt:
          $ref: '#/components/schemas/Date'
        phase:
          $ref: '#/components/schemas/PhaseReference'
      required:
        - id

    IncidentList:
      type: array
      items:
        $ref: '#/components/schemas/Incident'
      readOnly: true

  # parameter
  parameters:
    GenerationQueryParameter:
      description: Optional generation in query. E.g. ?generation=7
      name: generation
      in: query
      schema:
        $ref: '#/components/schemas/Incremental'

    ComponentIdPathParameter:
      description: Component ID is required in path.
      name: componentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Id'

    IncidentIdPathParameter:
      description: Incident ID is required in path.
      name: incidentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Id'

    IncidentUpdateIdPathParameter:
      description: Incident update id (inremental) is required in path.
      name: updateId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Incremental'

    ImpactTypeIdPathParameter:
      description: Impact type ID is required in path.
      name: impactTypeId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Id'

  # requests
  requestBodies:
    PhaseListRequest:
      description: Send a new list of phases.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PhaseList'

    ComponentRequest:
      description: Send a component.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Component'

    IncidentRequest:
      description: Send an incident.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Incident'

    IncidentUpdateRequest:
      description: Send an incident update.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncidentUpdate'

    ImpactTypeRequest:
      description: Send an impact type.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImpactType'

  # responses
  responses:
    IdResponse:
      description: A request returns an ID.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Id'

    IncrementalResponse:
      description: A request returns an Incremental.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Incremental'

    PhaseListResponse:
      description: A request returns a phase list.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/PhaseList'

    ImpactTypeResponse:
      description: A request returns an impact type.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ImpactType'

    ImpactTypeListResponse:
      description: A request returns a list of impact types.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ImpactTypeList'

    ComponentResponse:
      description: A request returns a component.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Component'

    ComponentListResponse:
      description: A request returns a list of components.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ComponentList'

    IncidentResponse:
      description: A request returns an incident.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Incident'

    IncidentListResponse:
      description: A request returns a list of incidents.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/IncidentList'

    IncidentUpdateResponse:
      description: A request returns an incident update.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/IncidentUpdate'

    IncidentUpdateListResponse:
      description: A request returns a list of incident updates.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/IncidentUpdateList'

paths:
  /phases:
    get:
      summary: Get the current generation list of phases.
      operationId: getPhaseList
      parameters:
        - $ref: '#/components/parameters/GenerationQueryParameter'
      responses:
        '200':
          $ref: '#/components/responses/PhaseListResponse'

    post:
      summary: Create a new generation of the phase list.
      operationId: createPhaseList
      requestBody:
        $ref: '#/components/requestBodies/PhaseListRequest'
      responses:
        '201':
          $ref: '#/components/responses/IncrementalResponse'

  /impacttypes:
    get:
      summary: Get a list of impact types.
      operationId: getImpactTypes
      responses:
        '200':
          $ref: '#/components/responses/ImpactTypeListResponse'

    post:
      summary: Create a new impact type.
      operationId: createImpactType
      requestBody:
        $ref: '#/components/requestBodies/ImpactTypeRequest'
      responses:
        '201':
          $ref: '#/components/responses/IdResponse'

  /impacttypes/{impactTypeId}:
    get:
      summary: Get a specific impact type by id.
      operationId: getImpactType
      parameters:
        - $ref: '#/components/parameters/ImpactTypeIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/ImpactTypeResponse'

    patch:
      summary: Update a specific impact type.
      operationId: updateImpactType
      parameters:
        - $ref: '#/components/parameters/ImpactTypeIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/ImpactTypeRequest'
      responses:
        '204':
          description: Successful. No Content

    delete:
      summary: Delete an impact type.
      operationId: deleteImpactType
      parameters:
        - $ref: '#/components/parameters/ImpactTypeIdPathParameter'
      responses:
        '204':
          description: Successful. No Content

  /components:
    get:
      summary: Get a list of components.
      operationId: getComponents
      responses:
        '200':
          $ref: '#/components/responses/ComponentListResponse'

    post:
      summary: Create a new component.
      operationId: createComponent
      requestBody:
        $ref: '#/components/requestBodies/ComponentRequest'
      responses:
        '201':
          $ref: '#/components/responses/IdResponse'

  /components/{componentId}:
    get:
      summary: Get a specific component by id.
      operationId: getComponent
      parameters:
      - $ref: '#/components/parameters/ComponentIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/ComponentResponse'

    patch:
      summary: Update a component.
      operationId: updateComponent
      parameters:
      - $ref: '#/components/parameters/ComponentIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/ComponentRequest'
      responses:
        '204':
          description: Successful. No Content

    delete:
      summary: Delete a component.
      operationId: deleteComponent
      parameters:
        - $ref: '#/components/parameters/ComponentIdPathParameter'
      responses:
        '204':
          description: Successful. No Content

  /incidents:
    get:
      summary: Get a list of incidents between two points in time.
      operationId: getIncidents
      parameters:
      - in: query
        name: start
        schema:
          type: string
          format: date-time
          default: '2022-01-01T10:10:10.010Z'
        required: true
        description: Start of time frame to query for (RFC3339).
      - in: query
        name: end
        schema:
          type: string
          format: date-time
          default: '2024-01-01T10:10:10.010Z'
        required: true
        description: End of time frame to query for (RFC3339).
      responses:
        '200':
          $ref: '#/components/responses/IncidentListResponse'

    post:
      summary: Create a new incident.
      operationId: createIncident
      requestBody:
        $ref: '#/components/requestBodies/IncidentRequest'
      responses:
        '201':
          $ref: '#/components/responses/IdResponse'

  /incidents/{incidentId}:
    get:
      summary: Get a specific incident by id.
      operationId: getIncident
      parameters:
      - $ref: '#/components/parameters/IncidentIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/IncidentResponse'

    patch:
      summary: Update an incident.
      operationId: updateIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/IncidentRequest'
      responses:
        '204':
          description: Successful. No Content

    delete:
      summary: Delete an incident.
      operationId: deleteIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
      responses:
        '204':
          description: Successful. No Content

  /incidents/{incidentId}/updates:
    get:
      summary: Get a list of updates from a specific incident.
      operationId: getIncidentUpdates
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/IncidentUpdateListResponse'

    post:
      summary: Create a new update to a specific incident.
      operationId: createIncidentUpdate
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/IncidentUpdateRequest'
      responses:
        '201':
          $ref: '#/components/responses/IncrementalResponse'

  /incidents/{incidentId}/updates/{updateId}:
    get:
      summary: Get a specific update from a specific incident.
      operationId: getIncidentUpdate
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
        - $ref: '#/components/parameters/IncidentUpdateIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/IncidentUpdateResponse'

    patch:
      summary: Update a specific update from a specific incident.
      operationId: updateIncidentUpdate
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
        - $ref: '#/components/parameters/IncidentUpdateIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/IncidentUpdateRequest'
      responses:
        '204':
          description: Successful. No Content

    delete:
      summary: Delete a specific update from a specific incident
      operationId: deleteIncidentUpdate
      parameters:
        - $ref: '#/components/parameters/IncidentIdPathParameter'
        - $ref: '#/components/parameters/IncidentUpdateIdPathParameter'
      responses:
        '204':
          description: Successful. No Content
